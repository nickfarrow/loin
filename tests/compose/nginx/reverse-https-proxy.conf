#daemon on;
#user  nobody;
#worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    #worker_connections  1024;
}


http {
    #include       mime.types;
    #default_type  application/octet-stream; #mime types missing or this conf belongs in /etc/nginx folder

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    #sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    #keepalive_timeout  65;

    #gzip  on;

#    server {
#        listen       3000;
#        return 301 https://$host$request_uri;
#    }

    server {

        listen 3010 ssl;
        server_name localhost;
        access_log /dev/stdout;
        error_log /dev/stdout;


        # access_log            /var/log/nginx/loin.access.log;

        location / {
          proxy_set_header        Host $host;
          proxy_set_header        X-Real-IP $remote_addr;
          proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header        X-Forwarded-Proto $scheme;

          proxy_pass          http://host.docker.internal:3000/;
          proxy_ssl_verify on;
          proxy_read_timeout  90;
          proxy_redirect off;

          # kill cache
          add_header Last-Modified $date_gmt;
          add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
          if_modified_since off;
          expires off;
          etag off;
        }
        
        ssl_certificate      /etc/ssl/localhost.pem;
        ssl_certificate_key  /etc/ssl/localhost-key.pem;

        #    ssl_session_cache    shared:SSL:1m;
        #    ssl_session_timeout  5m;

        #    ssl_ciphers  HIGH:!aNULL:!MD5;
        #    ssl_prefer_server_ciphers  on;
    }

    include servers/*;
}
